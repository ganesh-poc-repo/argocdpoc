# Default values for alpha-microservice-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
  
image:
  repository: ""
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

pdb:
  minAvailable: 0

serviceAccount:
  create: true
  annotations: {}
  # If not set and create is true, the release name is used.
  name: ""

hosts: []
gateway:
  default: service-mesh/istio-autogenerated-k8s-ingress
  create: true
  port: 80
  name: http
  protocol: HTTP
  tls:
    enabled: false
    credentialName: router-certs-pca

# To be removed when fully migrated to NSX LB
gatewayAnnotations:
  haproxy.router.openshift.io/timeout: 60s

# Should be set by individual job.
podAnnotations:
  traffic.sidecar.istio.io/excludeOutboundPorts: "8200"
  sidecar.istio.io/rewriteAppHTTPProbers: "true"
  prometheus.io/scrape: 'true'
  prometheus.io/path: '/prometheus'
  prometheus.io/port: "8080"

podSecurityContext: {}

securityContext:
  # runAsUser: 12345
  # runAsGroup: 23456
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  privileged: false
  capabilities:
    drop: [ "ALL" ]

timeoutSeconds: 3

service:
  type: ClusterIP
  port: 8080

# Currently this is added by the build job in future it should be brought into this helm chart.
resources:
 requests:
   memory: 256Mi
   cpu: 200m

secretStoreRefName: vault
secretStoreRefKind: ClusterSecretStore

environmentConfiguration:
  useCommon: true
  additional: []
  externalSecrets: []
  # - name: EXAMPLE_PASSWORD
  #   secretKey: password
  #   remoteRef:
  #     key: kv/example
  #     property: password
  secrets: []
  # - name: EXAMPLE_PASSWORD
  #   secretName: example
  #   secretKey: password

#VAULT CSI Configuration
csiSecretProvider:
  enabled: false
volumes: []

volumeMounts: []

# Currently this is added by the build job in future it should be brought into this helm chart.
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 90
  # targetMemoryUtilizationPercentage: 80

# Not currently used but if we have specialist services going forward we can configure these
nodeSelector: {}
tolerations: []
